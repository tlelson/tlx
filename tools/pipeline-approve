#!/usr/bin/env bash

if [ -z "$1" ]; then
	echo "provide a pipeline name as the first argument, and optionally, the stage as a second argument.  If only one stage is approvable, it will be approved."
	echo "E.G pipeline-approve 'meta' "
	echo "E.G pipeline-approve 'meta' 'Approval_To_Staging' "
	exit 1
fi
pipeline_name="$1"

stage_to_approve=""
pipeline=""

if [ -z "$2" ]; then
	pipeline=$(pipeline-check "${pipeline_name}")

	readarray approvable_stages < <(echo "${pipeline}" | jq -r '[.stages[] | select(.stageName|test("Approval.*")) | select(.status == "InProgress")  | .stageName] | .[]')

	if [ ${#approvable_stages[@]} -ne 1 ]; then
		echo "Approvable stages are: "
		for stage in "${approvable_stages[@]}"; do
			stage=$(echo "$stage" | tr -d '\n')
			echo "\"${stage}\""
		done
		exit 1
	else
		stage_to_approve=$(echo "${approvable_stages[0]}" | tr -d '\n')
	fi
else
	stage_to_approve="$2"
fi

echo "approving stage: ${stage_to_approve}"

action=$(echo "${pipeline}" | jq -rc --arg stage "${stage_to_approve}" '.stages[] | select(.stageName == $stage) | .actions[] | select(.status == "InProgress") | {actionName, token}')
action_name=$(echo "$action" | jq '.actionName')
token=$(echo "$action" | jq '.token')

echo aws codepipeline put-approval-result \
	--pipeline-name "${pipeline_name}" \
	--stage-name "${stage_to_approve}" \
	--action-name "${action_name}" \
	--result 'summary="",status=Approved' \
	--token "${token}"
